/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package challenge15;

import java.util.List;

public class App {
    public static void main(String[] args) {
//        BinarySearchTree tree = new BinarySearchTree();
//
//        tree.add(5);
//        tree.add(3);
//        tree.add(8);
//        tree.add(1);
//        tree.add(4);
//        tree.add(7);
//        tree.add(9);

//        System.out.println("Contains 4: " + tree.contains(4));
//        System.out.println("Contains 6: " + tree.contains(6));
//
//        System.out.println("Preorder Traversal: " + tree.preOrder());
//        System.out.println("Inorder Traversal: " + tree.inOrder());
//        System.out.println("Postorder Traversal: " + tree.postOrder());

        BinaryTree binaryTree = new BinaryTree();

        binaryTree.root = new Node(2);
        binaryTree.root.left = new Node(7);
        binaryTree.root.right = new Node(5);
        binaryTree.root.left.left = new Node(2);
        binaryTree.root.left.right = new Node(6);
        binaryTree.root.right.right = new Node(9);

//        int maxValue = binaryTree.findMaximumValue();
//        System.out.println("Maximum value in the tree: " + maxValue);

        List<Integer> result = binaryTree.breadthFirst();

        System.out.print("[");
        for (int i = 0; i < result.size(); i++) {
            System.out.print(result.get(i));
            if (i < result.size() - 1) {
                System.out.print(",");
            }
        }
        System.out.println("]");
    }
}
