/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package challenge32;

import org.junit.jupiter.api.Test;

import java.util.Set;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    public void testTreeIntersectionWithCommonValues() {
        TreeNode root1 = new TreeNode(1);
        root1.left = new TreeNode(2);
        root1.right = new TreeNode(3);

        TreeNode root2 = new TreeNode(2);
        root2.left = new TreeNode(3);
        root2.right = new TreeNode(4);

        TreeIntersection treeIntersection = new TreeIntersection();

        Set<Integer> commonValues = treeIntersection.treeIntersection(root1, root2);

        assertTrue(commonValues.contains(2));
        assertTrue(commonValues.contains(3));
        assertEquals(2, commonValues.size());
    }

    @Test
    public void testTreeIntersectionWithNoCommonValues() {
        TreeNode root1 = new TreeNode(1);
        root1.left = new TreeNode(2);
        root1.right = new TreeNode(3);

        TreeNode root2 = new TreeNode(4);
        root2.left = new TreeNode(5);
        root2.right = new TreeNode(6);

        TreeIntersection treeIntersection = new TreeIntersection();

        Set<Integer> commonValues = treeIntersection.treeIntersection(root1, root2);

        assertTrue(commonValues.isEmpty());
    }

    @Test
    public void testTreeIntersectionWithOneEmptyTree() {
        TreeNode root1 = new TreeNode(1);
        root1.left = new TreeNode(2);
        root1.right = new TreeNode(3);

        TreeNode root2 = null; // Empty tree

        TreeIntersection treeIntersection = new TreeIntersection();

        Set<Integer> commonValues = treeIntersection.treeIntersection(root1, root2);

        assertTrue(commonValues.isEmpty());
    }
}
